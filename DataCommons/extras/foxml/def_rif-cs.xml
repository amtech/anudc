<?xml version="1.0" encoding="UTF-8"?>
<foxml:digitalObject VERSION="1.1" PID="def:rif-cs"
xmlns:foxml="info:fedora/fedora-system:def/foxml#"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="info:fedora/fedora-system:def/foxml# http://www.fedora.info/definitions/1/0/foxml1-1.xsd">
<foxml:objectProperties>
<foxml:property NAME="info:fedora/fedora-system:def/model#state" VALUE="Active"/>
<foxml:property NAME="info:fedora/fedora-system:def/model#label" VALUE="RIF-CS XSL"/>
<foxml:property NAME="info:fedora/fedora-system:def/model#ownerId" VALUE=""/>
<foxml:property NAME="info:fedora/fedora-system:def/model#createdDate" VALUE="2012-05-15T06:06:24.012Z"/>
<foxml:property NAME="info:fedora/fedora-system:def/view#lastModifiedDate" VALUE="2012-05-15T06:06:39.246Z"/>
</foxml:objectProperties>
<foxml:datastream ID="AUDIT" STATE="A" CONTROL_GROUP="X" VERSIONABLE="false">
<foxml:datastreamVersion ID="AUDIT.0" LABEL="Audit Trail for this object" CREATED="2012-05-15T06:06:24.012Z" MIMETYPE="text/xml" FORMAT_URI="info:fedora/fedora-system:format/xml.fedora.audit">
<foxml:xmlContent>
<audit:auditTrail xmlns:audit="info:fedora/fedora-system:def/audit#">
<audit:record ID="AUDREC1">
<audit:process type="Fedora API-M"/>
<audit:action>addDatastream</audit:action>
<audit:componentID>XSL_SOURCE</audit:componentID>
<audit:responsibility>fedoraAdmin</audit:responsibility>
<audit:date>2012-05-15T06:06:39.246Z</audit:date>
<audit:justification></audit:justification>
</audit:record>
</audit:auditTrail>
</foxml:xmlContent>
</foxml:datastreamVersion>
</foxml:datastream>
<foxml:datastream ID="DC" STATE="A" CONTROL_GROUP="X" VERSIONABLE="true">
<foxml:datastreamVersion ID="DC1.0" LABEL="Dublin Core Record for this object" CREATED="2012-05-15T06:06:24.012Z" MIMETYPE="text/xml" FORMAT_URI="http://www.openarchives.org/OAI/2.0/oai_dc/" SIZE="373">
<foxml:xmlContent>
<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
  <dc:title>RIF-CS XSL</dc:title>
  <dc:identifier>def:rif-cs</dc:identifier>
</oai_dc:dc>
</foxml:xmlContent>
</foxml:datastreamVersion>
</foxml:datastream>
<foxml:datastream ID="XSL_SOURCE" STATE="A" CONTROL_GROUP="X" VERSIONABLE="true">
<foxml:datastreamVersion ID="XSL_SOURCE.0" LABEL="XSL Source" CREATED="2012-05-15T06:06:39.246Z" MIMETYPE="text/xml" SIZE="11363">
<foxml:xmlContent>
<xsl:stylesheet xmlns="http://ands.org.au/standards/rif-cs/registryObjects" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
  <xsl:param name="key"></xsl:param>
  <xsl:template match="/">
    <registryObjects xmlns="http://ands.org.au/standards/rif-cs/registryObjects" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://ands.org.au/standards/rif-cs/registryObjects http://services.ands.org.au/documentation/rifcs/schema/registryObjects.xsd">
      <registryObject group="The Australian National University">
        <key>http://anu.edu.au/<xsl:value-of select="$key"></xsl:value-of>
        </key>
        <originatingSource>http://anu.edu.au</originatingSource>
        <xsl:choose>
          <xsl:when test="data/type/text() = &apos;Collection&apos;">
            <collection>
              <xsl:attribute name="type">
                <xsl:value-of select="data/subType"></xsl:value-of>
              </xsl:attribute>
              <xsl:call-template name="process"></xsl:call-template>
            </collection>
          </xsl:when>
          <xsl:when test="data/type/text() = &apos;Activity&apos;">
            <activity>
              <xsl:attribute name="type">
                <xsl:value-of select="data/subType/text()"></xsl:value-of>
              </xsl:attribute>
              <xsl:call-template name="process"></xsl:call-template>
            </activity>
          </xsl:when>
          <xsl:when test="data/type/text() = &apos;Party&apos;">
            <party>
              <xsl:attribute name="type">
                <xsl:value-of select="data/subType/text()"></xsl:value-of>
              </xsl:attribute>
              <xsl:call-template name="process"></xsl:call-template>
            </party>
          </xsl:when>
          <xsl:when test="data/type/text() = &apos;Service&apos;">
            <service>
              <xsl:attribute name="type">
                <xsl:value-of select="data/subType/text()"></xsl:value-of>
              </xsl:attribute>
              <xsl:call-template name="process"></xsl:call-template>
            </service>
          </xsl:when>
        </xsl:choose>
      </registryObject>
    </registryObjects>
  </xsl:template>
  <xsl:template name="process">
    <xsl:if test="data/arcNumber">
      <identifier type="arc">http://purl.org/au-research/grants/arc/<xsl:value-of select="data/arcNumber"></xsl:value-of>
      </identifier>
    </xsl:if>
    <xsl:if test="data/nlaIdentifier">
      <identifier type="AU-ANL:PEAU">
        <xsl:value-of select="data/nlaIdentifier"></xsl:value-of>
      </identifier>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="data/lastName or data/givenName">
        <name type="primary">
          <xsl:if test="data/title">
            <namePart type="title">
              <xsl:value-of select="data/title"></xsl:value-of>
            </namePart>
          </xsl:if>
          <xsl:if test="data/lastName">
            <namePart type="family">
              <xsl:value-of select="data/lastName"></xsl:value-of>
            </namePart>
          </xsl:if>
          <xsl:if test="data/givenName">
            <namePart type="given">
              <xsl:value-of select="data/givenName"></xsl:value-of>
            </namePart>
          </xsl:if>
        </name>
      </xsl:when>
      <xsl:when test="data/name">
        <name type="primary">
          <namePart>
            <xsl:value-of select="data/name"></xsl:value-of>
          </namePart>
        </name>
      </xsl:when>
    </xsl:choose>
    <xsl:if test="data/altLastName or data/altGivenName">
      <name type="primary">
        <xsl:if test="data/altTitle">
          <namePart type="title">
            <xsl:value-of select="data/altTitle"></xsl:value-of>
          </namePart>
        </xsl:if>
        <xsl:if test="data/altLastName">
          <namePart type="family">
            <xsl:value-of select="data/altLastName"></xsl:value-of>
          </namePart>
        </xsl:if>
        <xsl:if test="data/altGivenName">
          <namePart type="given">
            <xsl:value-of select="data/altGivenName"></xsl:value-of>
          </namePart>
        </xsl:if>
      </name>
    </xsl:if>
    <xsl:if test="data/abbrLastName or data/abbrGivenName">
      <name type="primary">
        <xsl:if test="data/altTitle">
          <namePart type="title">
            <xsl:value-of select="data/altTitle"></xsl:value-of>       
   </namePart>
        </xsl:if>
        <xsl:if test="data/abbrLastName">
          <namePart type="family">
            <xsl:value-of select="data/abbrLastName"></xsl:value-of>
          </namePart>
        </xsl:if>
        <xsl:if test="data/abbrGivenName">
          <namePart type="given">
            <xsl:value-of select="data/abbrGivenName"></xsl:value-of>
          </namePart>
        </xsl:if>
      </name>
    </xsl:if>
    <xsl:if test="data/abbrName">
      <xsl:for-each select="data/abbrName">
        <name type="abbreviated">
          <namePart>
            <xsl:value-of select="text()"></xsl:value-of>
          </namePart>
        </name>
      </xsl:for-each>
    </xsl:if>
    <xsl:if test="data/altName">
      <xsl:for-each select="data/altName">
        <name type="alternative">
          <namePart>
            <xsl:value-of select="text()"></xsl:value-of>
          </namePart>
        </name>
      </xsl:for-each>
    </xsl:if>
    <xsl:if test="data/email">
      <xsl:for-each select="data/email">
        <location>
          <address>
            <electronic type="email">
              <value>
                <xsl:value-of select="text()"></xsl:value-of>
              </value>
            </electronic>
          </address>
        </location>
      </xsl:for-each>
    </xsl:if>
    <xsl:if test="data/postalAddress">
      <xsl:for-each select="data/postalAddress">
        <location>
          <address>
            <physical type="postalAddress">
              <addressPart type="addressLine">
                <xsl:value-of select="text()"></xsl:value-of>
              </addressPart>
            </physical>
          </address>
        </location>
      </xsl:for-each>
    </xsl:if>
    <xsl:if test="data/phone">
      <xsl:for-each select="data/phone">
        <location>
          <address>
            <physical type="streetAddress">
              <addressPart type="telephoneNumber">
                <xsl:value-of select="text()"></xsl:value-of>
              </addressPart>
            </physical>
          </address>
        </location>
      </xsl:for-each>
    </xsl:if>
    <xsl:if test="data/fax">
      <xsl:for-each select="data/fax">
        <location>
          <address>
            <physical type="streetAddress">
              <addressPart type="faxNumber">
                <xsl:value-of select="text()"></xsl:value-of>
              </addressPart>
            </physical>
          </address>
        </location>
      </xsl:for-each>
    </xsl:if>
    <xsl:if test="data/websiteAddress">
      <xsl:for-each select="data/websiteAddress">
        <location>
          <address>
            <electronic type="url">
              <value>
                <xsl:value-of select="text()"></xsl:value-of>
              </value>
            </electronic>
          </address>
        </location>
      </xsl:for-each>
    </xsl:if>
    <xsl:if test="data/anzforSubject">
      <xsl:for-each select="data/anzforSubject">
        <subject type="anzsrc-for">
          <xsl:value-of select="text()"></xsl:value-of>
        </subject>
      </xsl:for-each>
    </xsl:if>
    <xsl:if test="data/locSubject">
      <xsl:for-each select="data/locSubject">
        <subject type="local">
          <xsl:value-of select="text()"></xsl:value-of>
        </subject>
      </xsl:for-each>
    </xsl:if>
    <xsl:if test="data/briefDesc">
      <description type="brief">
        <xsl:value-of select="data/briefDesc"></xsl:value-of>
      </description>
    </xsl:if>
    <xsl:if test="data/fullDesc">
      <description type="full">
        <xsl:value-of select="data/fullDesc"></xsl:value-of>
      </description>
    </xsl:if>
    <xsl:if test="data/significanceStatement">
      <description type="significanceStatement">
        <xsl:value-of select="data/significanceStatement"></xsl:value-of>
      </description>
    </xsl:if>
    <xsl:if test="data/deliveryMethod">
      <description type="deliveryMethod">
        <xsl:value-of select="data/deliveryMethod"></xsl:value-of>
      </description>
    </xsl:if>
    <xsl:if test="data/coverageDates">
      <xsl:for-each select="date/coverageDates">
        <coverage>
          <temporal>
            <xsl:if test="dateFrom">
              <date dateFormat="W3CDTF" type="dateFrom">
                <xsl:value-of select="dateFrom"></xsl:value-of>
              </date>
            </xsl:if>
            <xsl:if test="dateTo">
              <date dateFormat="W3CDTF" type="dateFrom">
                <xsl:value-of select="dateTo"></xsl:value-of>
              </date>
            </xsl:if>
          </temporal>
        </coverage>
      </xsl:for-each>
    </xsl:if>
    <xsl:if test="data/coverageArea">
      <xsl:for-each select="data/coverageArea">
        <coverage>
          <spatial>
            <xsl:if test="covAreaType">
              <xsl:attribute name="type">
                <xsl:value-of select="covAreaType"></xsl:value-of>
              </xsl:attribute>
            </xsl:if>
            <xsl:if test="covAreaValue">
              <xsl:value-of select="covAreaValue"></xsl:value-of>
            </xsl:if>
          </spatial>
        </coverage>
      </xsl:for-each>
    </xsl:if>
    <xsl:if test="data/publication">
      <xsl:for-each select="data/publication">
        <relatedInfo type="publication">
          <identifier>
            <xsl:attribute name="type">
              <xsl:value-of select="pubType"></xsl:value-of>
            </xsl:attribute>
            <xsl:value-of select="pubValue"></xsl:value-of>
          </identifier>
          <title>
            <xsl:value-of select="pubTitle"></xsl:value-of>
          </title>
        </relatedInfo>
      </xsl:for-each>
    </xsl:if>
    <xsl:if test="data/relatedURL">
      <relatedInfo type="website">
        <identifier type="uri">
          <xsl:value-of select="data/relatedURL"></xsl:value-of>
        </identifier>
      </relatedInfo>
    </xsl:if>
    <xsl:if test="data/rightsStatement">
      <xsl:for-each select="data/rightsStatement">
        <rights>
          <rightsStatement>
            <xsl:value-of select="text()"></xsl:value-of>
          </rightsStatement>
        </rights>
      </xsl:for-each>
    </xsl:if>
    <xsl:if test="data/licence">
      <xsl:for-each select="data/licence">
        <rights>
          <license>
            <xsl:value-of select="text()"></xsl:value-of>
          </license>
        </rights>
      </xsl:for-each>
    </xsl:if>
    <xsl:if test="data/accessRights">
      <xsl:for-each select="data/accessRights">
        <rights>
          <accessRights>
            <xsl:value-of select="text()"></xsl:value-of>
          </accessRights>
        </rights>
      </xsl:for-each>
    </xsl:if>
    <xsl:if test="data/accessPolicy">
      <accessPolicy>
        <xsl:value-of select="data/accessPolicy"></xsl:value-of>
      </accessPolicy>
    </xsl:if>
  </xsl:template>
</xsl:stylesheet>
</foxml:xmlContent>
</foxml:datastreamVersion>
</foxml:datastream>
</foxml:digitalObject>